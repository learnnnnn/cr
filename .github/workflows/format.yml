name: format

on:
  workflow_dispatch:
  push:
    branches: [master]
  schedule:
    - cron: "0 23,1,3,5,7,9,11,13,15 * * *"

env:
  TZ: Asia/Shanghai

jobs:
  build:
    timeout-minutes: 30
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: install dp
        run: |
          sudo apt-get install openssl -y

      - name: dec db
        run: |
          openssl enc -aes-256-cbc -pbkdf2 -d -in format.db -out format -pass pass:"${{ secrets.OPENSSL_KEY }}"

      - id: set_commit_message
        run: echo ::set-output name=COMMIT_MSG::$(date "+%Y-%m-%d %H:%M:%S")

      - name: ssh
        run: |
          sudo sed -i 's/StrictHostKeyChecking/# StrictHostKeyChecking/' /etc/ssh/ssh_config
          echo "StrictHostKeyChecking no" | sudo tee -a /etc/ssh/ssh_config
          sudo mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" >id_rsa
          sudo mv id_rsa ~/.ssh/
          sudo chmod 600 ~/.ssh/id_rsa
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: do
        run: |
          rm -rf .git
          git clone -b ${{ secrets.TARGET_BRANCH }} --depth 1 "https://github.com/${{ secrets.YOUR_GIT_NAME }}/${{ secrets.TARGET_NAME }}" target >/dev/null 2>&1
          git clone -b pages --depth 1 "https://github.com/${{ secrets.YOUR_GIT_NAME }}/${{ secrets.TARGET_NAME }}" target2 >/dev/null 2>&1
          mv format target/
          cd target
          sudo chmod a+x format
          ./format
          rm format

      - name: sync to github
        id: sync_to_github
        run: |
          cd target
          git remote remove origin
          git remote add origin git@github.com:${{ secrets.YOUR_GIT_NAME }}/${{ secrets.TARGET_NAME }}.git
          git config user.name    "${{ secrets.YOUR_GIT_NAME }}"
          git config user.email   "${{ secrets.YOUR_GIT_EMAIL }}"
          git add .
          THIS_GIT_STATUS=$(git status)
          if [[ "$(echo ${THIS_GIT_STATUS} | grep -o "nothing to commit, working tree clean")" == "nothing to commit, working tree clean" ]]
          then
            exit 0
          fi
          git commit -m "${{ steps.set_commit_message.outputs.COMMIT_MSG }}" >/dev/null 2>&1
          git push -u origin ${{ secrets.TARGET_BRANCH }} >/dev/null 2>&1
          git rev-parse --short HEAD >../VERSION

      - name: sync to github 2
        run: |
          cd target2
          git remote remove origin
          git remote add origin git@github.com:${{ secrets.YOUR_GIT_NAME }}/${{ secrets.TARGET_NAME }}.git
          git config user.name    "${{ secrets.YOUR_GIT_NAME }}"
          git config user.email   "${{ secrets.YOUR_GIT_EMAIL }}"
          mv ../VERSION ./VERSION
          git add VERSION
          git commit -m "${{ steps.set_commit_message.outputs.COMMIT_MSG }}" >/dev/null 2>&1
          git push -u origin pages >/dev/null 2>&1
